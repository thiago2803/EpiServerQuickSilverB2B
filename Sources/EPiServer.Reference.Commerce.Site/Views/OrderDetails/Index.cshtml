@using System.Web.Mvc.Html
@using EPiServer.Commerce.Order
@using EPiServer.Reference.Commerce.Site.B2B.Enums
@using EPiServer.Reference.Commerce.Site.B2B
@using EPiServer.Reference.Commerce.Site.Features.Shared.Extensions
@model EPiServer.Reference.Commerce.Site.Features.OrderDetails.ViewModels.OrderDetailsViewModel
@if (Model.PurchaseOrder != null)
{
    var orderForm = Model.PurchaseOrder.GetFirstForm();
    <div class="container">
        <div class="row myPage">
            @Html.Partial("_CmsNavigation", Model.CurrentPage)
            <main class="col-xs-12 col-sm-9">
                <div class="row section-box">
                    <div class="col-xs-12 col-sm-6">
                        <h3 class="h4">@Html.Translate("/OrderHistory/Labels/OrderID") @Model.PurchaseOrder.OrderNumber</h3>
                        @if (string.Join(", ", orderForm.Payments.Select(x => x.PaymentMethodName)).Equals("BudgetPayment"))
                        {
                            <p class="text-success">
                                <strong>This is an organization order</strong>
                            </p>
                        }
                        <p>
                            @Html.Translate("/OrderHistory/Labels/OrderDate") @Model.PurchaseOrder.Created.ToLongDateString()
                            <br />
                            @Html.Translate("/OrderHistory/Labels/Status") <strong>@(Model.OrderStatus)</strong>
                            <br />
                            @if (orderForm.Payments.Any())
                            {
                              
                                <span>Payments</span>
                                @orderForm.Payments.First().PaymentMethodName;
                                <br />
                            }
                            @if (Model.PurchaseOrder.Properties[Constants.Quote.QuoteStatus] != null && Model.PurchaseOrder.Properties[Constants.Quote.QuoteStatus].ToString().Equals("RequestQuotationFinished"))
                            {
                                @Html.DisplayName("New Total") <strong> @Model.PurchaseOrder.GetTotal().ToString() </strong> <br />
                                    @Html.DisplayName("Old Total") <strong> @Model.PurchaseOrder.Currency.Format.CurrencySymbol@Model.PurchaseOrder.Properties["PreQuoteTotal"].ToString().AsDecimal().ToString("N") </strong>
                            }
                            else
                            {
                                @Html.Translate("/OrderHistory/Labels/TotalPrice") <strong> @Model.PurchaseOrder.GetTotal().ToString() </strong> <br />
                            }
                            @using (Html.BeginForm("Reorder", "OrderDetails", FormMethod.Post))
                            {

                            <button type="button" data-order-link="@Model.OrderGroupId" class="btn btn-danger btn-empty jsReorder" >Reorder</button>
                            }
                        </p>
                    </div>
                    <div class="col-xs-12 col-sm-6">
                        <h4>@Html.Translate("/OrderHistory/Labels/ShippedTo")</h4>
                        @foreach (var shippingAddress in Model.ShippingAddresses)
                        {
                            @(Html.Partial("_Address", shippingAddress))
                        }
                    </div>

                    <div class="col-xs-12 spacer-top-l">
                        @*<h3 class="h4">@Html.Translate("/OrderHistory/Labels/ObjectsOrdered")</h3>*@
                        <table class="table table-stripped no-border">
                            <thead>
                                <tr>
                                    <th>
                                        Product
                                    </th>
                                    <th>
                                        Title
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                    <tr>
                                        <td><a href="@item.LineItem.GetUrl()" class="link--black"><img src="@item.LineItem.GetThumbnailUrl()" /></a></td>
                                        <td><a href="@item.LineItem.GetUrl()" class="link--black">@item.LineItem.GetEntryContent().DisplayName</a></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        @if (Model.IsOrganizationOrder && Model.CurrentCustomer.Role == B2BUserRoles.Approver)
                        {
                            if (Model.QuoteStatus != null && Model.QuoteStatus.Equals("RequestQuotationFinished"))
                            {
                                using (Html.BeginForm("LoadOrder", "Checkout", FormMethod.Post))
                                {
                                    <button type="button" class="btn btn-danger btn-empty jsCartLoadOrder" aria-expanded="false" data-order-link="@Model.OrderGroupId">@Html.Translate("/Header/MiniCart/Button/GoToCheckout")</button>
                                }
                            }

                            if (!Model.IsPaymentApproved)
                            {
                                using (Html.BeginForm("ApproveOrder", "OrderDetails", FormMethod.Post))
                                {
                                    <button type="button" data-order-link="@Model.OrderGroupId" class="btn btn-danger btn-empty jsApproveOrder" aria-expanded="false">Approve</button>
                                }
                            }
                        }
                        @if (Request.IsAuthenticated && string.IsNullOrEmpty(Model.PurchaseOrder.Properties[Constants.Quote.QuoteStatus] as string) && Model.CurrentCustomer.Role == B2BUserRoles.Purchaser)
                        {
                        using (@Html.BeginForm("RequestQuoteById", "Cart", FormMethod.Post))
                        {
                        @Html.Hidden("orderId", Model.OrderGroupId);
                        <div class="cart-item">
                            <button type="submit" class="btn btn-block btn-warning" aria-expanded="false">@Html.Translate("/Header/MiniCart/Button/RequestQuotation")</button>
                        </div>
                        }
                        }
                        <div id="BudgetWarningMessage" class="col-md-5 col-xs-12 alert alert-danger pull-right" hidden>
                            <button type="button" class="close" data-hide="alert">&times;</button>
                            <span class="warning-message warning-message-data"></span>
                            <a class="hidden cancelUpdateBudget" href="@Url.Action("Index", "OrderDetails", new {currentPage = Model.CurrentPage.ContentLink ,orderGroupId = @Model.OrderGroupId})"></a>
                        </div>
                    
                    </div>
                </div>
            </main>
        </div>
    </div>
}
